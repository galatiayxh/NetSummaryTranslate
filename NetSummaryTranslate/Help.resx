<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>批量翻译VS"摘要"，让AspNetCore彻底变成中文智能提示，Microsoft.AspNetCore.App.Ref “注释摘要" 批量翻译成中文 zh-hans，开发环境：Visual Studio 2019，WinForm，.NetCore3.1，
在 https://github.com/yy520a/NetCore.zh-hans 项目基础上进行的完善,感谢原作者,在原作者的基础上,完善了UI,并进行了多线程处理,大大缩短了翻译时间,因为只是作为个工具使用,因此,没有对程序做过多优化.

场景1:.Net 5.0 官方发布时没有提供 Microsoft.AspNetCore.App Visual Studio 智能提示intellisense 中文语言包,本人是在官方原英文包基础上,使用百度翻译api进行了整体翻译,示例如下:
Represents an implementation of the HTTP Context class. 
 | 百度译文：表示HTTP上下文类的实现。
使用说明:
1.使用之前先申请百度翻译API，申请接口地址 https://api.fanyi.baidu.com/ ，申请通用高级版即可，每月可免费翻译200万字符，申请到appId与secretKey后，填入对应的TextBox; 
2.点击 批量导入Xml文件|开始翻译按钮，导入AspNetCore.App.Ref 英文Xml文件， 默认路径是： C:\Program Files\dotnet\packs\Microsoft.AspNetCore.App.Ref\5.0.0\ref\net5.0 ，全选该文件夹里所有的.xml文件 然后点击打开就开始批量翻译了，注意观察进度条，全部翻译完成大概在10-15分钟(要提高速度，可以增加同时翻译线程数量，原来单线程需要2-3小时)，共计130万左右字符翻译量，请放心，程序不会修改原版的Xml文件，全部翻译完成后，会自动输出保存翻译结果到本项目目录内：Debug\netcoreapp3.1\zh-hans； 
3.复制zh-hans目录到C:\Program Files\dotnet\packs\Microsoft.AspNetCore.App.Ref\5.0.0\ref\net5.0 ，然后重启VS ，AspNetCore.App.Ref相关的方法“摘要”智能提示时会变成 原文+百度译文：  Visual Studio 2019 测试通过;
交流QQ:56665942
</value>
  </data>
</root>